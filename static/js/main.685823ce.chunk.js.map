{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/searchbox/searchbox.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","Searchbox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+TAGaA,EAAO,SAAAC,GAAK,OACrB,sBAAKC,UAAU,iBAAf,UACI,qBACAC,IAAI,UACJC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BAEH,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,YCNbC,EAAW,SAAAR,GACpB,OAAO,qBAAKC,UAAU,YAAf,SACND,EAAMS,SAASC,KAAI,SAAAN,GAAO,OACvB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCJdM,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACrB,uBAAOC,KAAK,SACZb,UAAU,SACVW,YAAcA,EACdG,SAAUF,MCoCCG,E,kDArCb,aAAc,IAAD,8BACX,gBAcDH,aAAe,SAAAI,GACd,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAdrC,EAAKC,MAAQ,CACXb,SAAU,GACVU,YAAa,IAJJ,E,qDASb,WAAoB,IAAD,OACjBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAU,CAACT,SAAUkB,S,oBAO3C,WAAW,IAAD,EACwBC,KAAKN,MAA9Bb,EADC,EACDA,SAAUU,EADT,EACSA,YACXU,EAAmBpB,EAASqB,QAAO,SAAA1B,GAAO,OAAIA,EAAQE,KAAKyB,cAAcC,SAASb,EAAYY,kBAEtG,OACE,sBAAK9B,UAAU,MAAf,UACA,iDACA,cAAC,EAAD,CAAWW,YAAY,kBAAkBC,aAAce,KAAKf,eAC5D,cAAC,EAAD,CAAUJ,SAAUoB,W,GA5BNI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.685823ce.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css';\r\n\r\nexport const Card = props => (\r\n    <div className=\"card-container\">\r\n        <img \r\n        alt=\"monster\" \r\n        src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}\r\n        />\r\n        <h2>{props.monster.name}</h2>\r\n        <p>{props.monster.email}</p>\r\n    </div>\r\n);","import React from 'react'; \r\nimport './card-list.styles.css';\r\nimport {Card} from '../card/card.component.jsx';\r\n\r\nexport const CardList = props => {\r\n    return <div className=\"card-list\">\r\n    {props.monsters.map(monster => (\r\n        <Card key={monster.id} monster={monster} />\r\n      ))}\r\n    </div>;\r\n};","import React from 'react';\r\nimport './searchbox.styles.css';\r\n\r\nexport const Searchbox = ({placeholder, handleChange}) => (\r\n    <input type='search' \r\n    className=\"search\"\r\n    placeholder= {placeholder}\r\n    onChange={handleChange} />\r\n)\r\n\r\n","import React, { Component} from 'react';\nimport './App.css';\nimport {CardList} from './components/card-list/card-list.component.jsx';\nimport {Searchbox} from './components/searchbox/searchbox.component.jsx';\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      monsters: [],\n      searchField: '',\n    }\n\n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState ({monsters: users}));\n  }\n\n   handleChange = e => {\n    this.setState({searchField: e.target.value});\n  }\n\n  render () {\n    const {monsters, searchField} = this.state;\n    const filteredMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchField.toLowerCase()))\n\n  return (\n    <div className=\"App\">\n    <h1>Monster Friendz</h1>\n    <Searchbox placeholder='search monsters' handleChange={this.handleChange} />\n    <CardList monsters={filteredMonsters}/>\n     \n    \n    \n  </div>\n  );\n  \n};\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}